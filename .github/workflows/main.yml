name: espidf CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      micro_ros_agent:
        image: microros/micro-ros-agent:galactic
        ports:
          - 8888:8888
        options: udp4 --port 8888

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: create image cache dir
      run: mkdir -p ~/image-cache

    - id: image-cache
      uses: actions/cache@v3
      with:
        path: ~/image-cache
        key: ${{ runner.os }}-${{ hashFiles('.gitpod.Dockerfile') }}

    - name: Create build container
      if: steps.image-cache.outputs.cache-hit != 'true'
      run: |
        docker build -t roboprog-dev-container - < .gitpod.Dockerfile
        docker safe -o ~/image-cache/roboprog-dev-container.tar roboprog-dev-container

    - name: Load build container from cache
      if: steps.image-cache.outputs.cache-hit == 'true'
      run: docker load -i ~/image-cache/roboprog-dev-container.tar

    - name: Build RoboProg
      run: docker run -u 0 -v $PWD:/srv -w/srv roboprog-dev-container /bin/bash -c "source /opt/esp/idf/export.sh; source /opt/ros/galactic/local_setup.bash; idf.py build"

    - name: Build RoboProg for Qemu
      run: docker run -u 0 -v $PWD:/srv -w/srv roboprog-dev-container /bin/bash -c "source /opt/esp/idf/export.sh; source /opt/ros/galactic/local_setup.bash; ./qemu_build.sh"

    - name: Run Tests
      run: docker run -u 0 -v $PWD:/srv -w/srv roboprog-dev-container /bin/bash -c "robot -d tests tests"

    - name: Upload Testresult
      uses: actions/upload-artifact@v3
      if: success() || failure()
      with:
        name: test-results
        path: |
          tests/
          !tests/*.robot
        retention-days: 30
